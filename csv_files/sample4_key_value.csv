['8'],['Tas'],[''],['LOn(). Vir'],['ites the tos'],[''],"['< Integer,']",['/ likely tote'],[''],"[""'""]",[''],['14'],[''],['Databases'],[''],"[""[ you profess knowledge of databases, you might be asked some questions on it. We'll review some of the key concepts and""]","[""offer an overview of how to approach these problems. As you read these queries, don't be surprised by minor variations in""]","['syntax. There are a variety of flavors of SQL, and you might have worked with a slightly different one. The examples in this book']",[''],"['have been tested against Microsoft SQL Server,']",[''],['p> SQL Syntax and Variations'],"['{mplicit and explicit joins are shown below, These two statements are equivalent, and it']","['one you choose, For consistency, we will stick to the explicit join.']",[''],"['’, a matter of personal preference which']",[''],"['SELECT CourseName, TeacherName']",[''],"['4 SELECT CourseName, TeacherName 1']","['2 FROM Courses INNER JOIN Teachers 2 FROM Courses, Teachers']",['3 ON Courses.TeacherID = Teachers.TeacherID 3 WHERE Courses.TeacherID = Teachers. TeacherID'],[''],['>» Denormalized vs. Normalized Databases'],[''],"['Normalized databases are designed to minimize redundancy, while denormalized databases are designed to o']",['Courses might contain a column called'],"['on about the teacher (name, address, etc) is']",[''],['ptimize read time.'],[''],"['in a traditional normalized database with data like Courses and Teachers,']","['Teacher ID, which is a foreign key to Teacher. One benefit of this is that informati']",['only stored once in the database. The drawback is that many common queries will require expensive joins.'],[''],"['g redundant data. For example, if we knew that we would have to repeat this']",[''],"['Instead, we can denormalize the database by storin']",['create highly scal-'],[''],"[""query often, we might store the teacher's name in the Courses table. Denormalization is commonly used to""]",[''],['able systems.'],[''],['> SQL Statements'],[''],"[""Let's walk through a review of basic SQL syntax, us""]",[''],"['the following simple structure (* indicates a primary key)', '']","['Courses', ' CourseID*, CourseName, TeacherID']","['Teachers', ' TeacherID*, TeacherName']",[''],"['Students', ' StudentID*, StudentName']","['StudentCourses', ' CourseID*, StudentID*']",[''],"['Using the above table, implement the following queries.']",[''],['ing as an example the database that was mentioned earlier. This database has'],[''],"['Query 1', ' Student Enrollment']",['Implement a query to get a list of all students and how many courses each student is enrolled in.'],[''],"['At first, we might try something like this', '']",[''],['/* Incorrect Code */'],[''],"['SELECT Students.StudentName, count(*)']",[''],['FROM Students INNER JOIN StudentCourses'],[''],['ON Students.StudentID = StudentCourses .StudentID'],[''],['GROUP BY Students.StudentID'],"['This has three problems', '']",[''],['1. We have excluded stu'],['need to change this to a LEFT JOIN.'],"['ve changed it toa LEFT JOIN, the query is still not quite ri']",[''],['Vwbwn pe'],[''],"['dents who are not enrolled in any courses, since StudentCourses only includes enrolled students,']",[''],['ght. Doing count (*) would return how many items there'],[''],['enald'],[''],['CrackingTheCodinginterview.com | 6th Edition (India) 123'],[''],['']
